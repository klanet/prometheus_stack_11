version: '3'

services:

  grafana:
    image: grafana/grafana
    user: root
    depends_on:
     - prometheus
    ports:
     - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=illchangeitanyway
   #   - GF_SERVER_SERVE_FROM_SUB_PATH=true
   #   - GF_SERVER_ROOT_URL=http://192.168.10.232/grafana/
  #    - GF_AUTH_PROXY_ENABLED=true
    container_name: grafana
    hostname: grafana
    restart:  always
    networks:
        - default
#  reverseproxy:
#    image: scheele/reverseproxy:latest
#    container_name: reverseproxy 
#    ports:
#     - "8081:8081"

  nginx:
    image: nginx:stable-alpine3.17
    container_name: nginx
    hostname: nginx
    volumes:
     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
     - "81:80"
    networks:
        - default
    links:
      - jbpmn:jbpmn
      - grafana:grafana
    depends_on:
      - jbpmn
      - grafana
  postgresql:
    image: postgres:15-alpine3.17
    hostname: postgresql
    container_name: postgresql
    volumes:
      - ./postgres:/var/lib/postgresql
    ports:
      - "5433:5432"
    environment:
        - PG_DATA=/var/lib/postgresql/data
        - POSTGRES_PASSWORD=admin
        - POSTGRES_USER=admin
        - POSTGRES_DB=prod
    networks:
        - default
  jbpmn:
    image: jboss/jbpm-server-full:latest
    hostname: jbpmn
    volumes:
    - ./jbpmn:/etc/jbpmn
    ports:
    - 8080:8080
    container_name: jbpmn
    restart: always
    depends_on:
      - postgresql
    links:
      - postgresql
    environment:
     - JBPM_DB_HOST=postgresql
     - JBPM_DB_DRIVER=postgres
     - JBPM_DB_PORT=5432
     - JBPM_DB_PASSWORD=admin
     - JBPM_DB_NAME=prod
     - JBPM_DB_USER=admin
    networks:
        - default
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    hostname: prometheus
#    ports:
#      - '9090:9090'
    networks:
        - default

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: exporter
    hostname: exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
#    ports:
#      - 9100:9100
    restart: always
    networks:
        - default
      
volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  default:
    name: custom_net_1
    driver: bridge
